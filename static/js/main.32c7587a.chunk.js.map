{"version":3,"sources":["todo/todo.js","App.js","serviceWorker.js","index.js"],"names":["Todo","props","state","text","listItem","handleInput","bind","addItem","Remove","index","key","this","length","document","getElementById","style","display","setState","filter","i","e","target","value","console","log","preventDefault","item","concat","className","onSubmit","id","type","placeholder","onChange","map","aria-hidden","onClick","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.32c7587a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./todo.css\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      listItem: [],\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.Remove = this.Remove.bind(this);\n  }\n  Remove(index) {\n    var key = index;\n    if (this.state.listItem.length === 1) {\n      debugger;\n      document.getElementById(\"todo_nothing\").style.display = \"block\";\n    }\n    // console.log(\"id\" + item);\n    this.setState({\n      listItem: this.state.listItem.filter(function (index, i) {\n        // console.log(el)\n        return i !== key;\n      }),\n    });\n  }\n\n  handleInput(e) {\n    this.setState({\n      text: e.target.value,\n    });\n    console.log(e.target.value);\n  }\n  addItem(e) {\n    // console.log(\"hello\");\n    e.preventDefault();\n    const item = this.state.text;\n    if (this.state.text !== \"\") {\n      this.setState({\n        listItem: this.state.listItem.concat([item]),\n        text: \"\",\n      });\n      // console.log(this.state.listItem);\n      // document.getElementById(\"todo_nothing\").style.visibility = \"hidden\";\n      document.getElementById(\"todo_nothing\").style.display = \"none\";\n      document.getElementById(\"input_todo\").value = \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>TODO List</h1>\n        <br />\n        <div className=\"card todo_card\">\n          <form onSubmit={this.addItem}>\n            <input\n              id=\"input_todo\"\n              className=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Todays Task\"\n              value={this.state.text}\n              onChange={this.handleInput}\n            />\n            <ul id=\"todo_ul\" className=\"list-group\">\n              <li\n                id=\"todo_nothing\"\n                className=\"list-group-item list-group-item-info \"\n              >\n                You Have Nothing To DO\n              </li>\n              {this.state.listItem.map((item, index) => {\n                // console.log(\"qwertyui\");\n                // console.log(index);\n                return (\n                  <li\n                    id={index}\n                    className=\"list-group-item list-group-item-info todo_li\"\n                    value={item}\n                  >\n                    <span>{item}</span>\n\n                    <i\n                      className=\"fa fa-trash todo_trash\"\n                      aria-hidden=\"true\"\n                      onClick={(e) => this.Remove(index)}\n                    ></i>\n                  </li>\n                );\n              })}\n            </ul>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import logo from './logo.svg';\nimport './App.css';\nimport Todo from './todo/todo';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n    <Todo />   \n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\n// import Todo from './todo/todo';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}